name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_pass
          MYSQL_DATABASE: coach_app_test
        ports:
          - 3306:3306

        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot_pass --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, json, pdo, pdo_mysql
          coverage: none

      - name: Cache Composer downloads
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Create .env.test
        run: |
          cat > .env.test <<'EOF'
          APP_ENV=test
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_NAME=coach_app_test
          DB_USER=root
          DB_PASS=root_pass
          JWT_SECRET=tests_only_change_me
          JWT_EXPIRES=3600
          EOF
          
      - name: Install MySQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot_pass --silent; then
              echo -e "MySQL is up!"; exit 0
            fi
            printf "Waiting for MySQL... [%2d/30]\r" $i
            sleep 2
          done
          echo "MySQL did not become ready in time." && exit 1

      - name: Run unit tests
        run: composer test:unit

      - name: Run integration tests
        run: composer test:integration
